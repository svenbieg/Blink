//=================
// PcieRegisters.h
//=================

#pragma once


//===========
// Namespace
//===========

namespace Devices {
	namespace Pcie {


//========
// Device
//========

typedef struct
{
UINT RES0;
union
	{
	REG16 CMD;
	UINT RES1;
	};
REG CLASSREV; // 0x08
union
	{
	struct
		{
		REG8 CACHE_LINE_SIZE; // 0x0C
		REG8 LATENCY_TIMER; // 0x0D
		REG8 HEADER_TYPE; // 0x0E
		};
	UINT RES2;
	};
REG BASE_LO; // 0x10
REG BASE_HI;
union
	{
	struct
		{
		REG8 PRIMARY_BUS; // 0x18
		REG8 SECONDARY_BUS; // 0x19
		REG8 SUBORDINATE_BUS; // 0x1A
		REG8 SEC_LATENCY_TIMER; // 0x1B
		};
	UINT RES3;
	};
UINT RES4; // 0x1C
union
	{
	struct
		{
		REG16 MEM_BASE; // 0x20
		REG16 MEM_LIMIT; // 0x22
		};
	UINT RES5;
	};
UINT RES6[6]; // 0x24
union
	{
	struct
		{
		REG8 IRQ_LINE; // 0x3C
		REG8 IRQ_PIN; // 0x3D
		REG8 BRIDGE_CTRL; // 0x3E
		};
	UINT RES7;
	};
UINT RES8[27];
REG CAPS; // 0xAC
REG DEVCAP;
REG DEVCTRL;
REG LNKCAP;
REG LNKCTRL;
REG SLOT_CAP;
REG SLOT_CTRL;
union
	{
	REG8 ROOT_CTRL;
	UINT RES9;
	};
REG ROOT_STATUS;
REG DEVCAP2;
REG DEVCTRL2;
REG LNKCAP2;
union
	{
	REG16 LNKCTL2;
	UINT RES10;
	};
REG SLOT_CAP2;
REG SLOT_CTRL2;
UINT RES11[40]; // 0xE8
REG VENDOR_SPECIFIC_REG1; // 0x188
UINT RES12[172];
REG PRIV1_ID_VAL3; // 0x43C
UINT RES13[39];
REG PRIV1_LINK_CAPABILITY; // 0x4DC
UINT RES14[331];
REG TL_VDM_CTL1; // 0xA0C
UINT RES15[4];
REG TL_VDM_CTL0; // 0xA20
UINT RES16[375];
}PCIE_REGS;

constexpr UINT BASE_MEM_TYPE_64=4;

constexpr UINT BRIDGE_CTRL_PARITY=1;

constexpr BIT_FIELD CLASSREV_CLASS={ 0xFFFFFF, 8 };

constexpr UINT CMD_MEMORY=(1<<1);
constexpr UINT CMD_MASTER=(1<<2);
constexpr UINT CMD_PARITY=(1<<6);
constexpr UINT CMD_SERR=(1<<8);

constexpr UINT HEADER_TYPE_NORMAL=0;
constexpr UINT HEADER_TYPE_BRIDGE=1;

constexpr UINT LINK_STATE_L0S=(1<<0);
constexpr UINT LINK_STATE_L1=(1<<1);

constexpr BIT_FIELD LNKCAP_SLS={ 0xF, 0 };

constexpr BIT_FIELD LNKCTL2_SLS={ 0xF, 0 };

constexpr UINT PRIV1_ID_VAL3_CLASS_CODE=0xFFFFFF;

constexpr BIT_FIELD PRIV1_LINK_CAPABILITY_ASPM_SUPPORT={ 0x3, 10 };

constexpr UINT TL_VDM_CTL0_VDM_ENABLED=(1<<16);
constexpr UINT TL_VDM_CTL0_VDM_IGNORETAG=(1<<17);
constexpr UINT TL_VDM_CTL0_VDM_IGNOREVNDRID=(1<<18);

constexpr BIT_FIELD VENDOR_SPECIFIC_REG1_ENDIAN_MODE_BAR2={ 0x3, 2 };
constexpr UINT VENDOR_SPECIFIC_REG1_LITTLE_ENDIAN=0;


//======
// Host
//======

typedef struct
{
REG LOW;
REG HIGH;
}MEM_WIN_REGS;

typedef struct
{
REG BASE;
REG LIMIT;
}MEM_WIN_BASE_LIMIT_REGS;

typedef struct
{
PCIE_REGS CFG;
UINT RES9[64]; // 0x1000
REG DL_MDIO_ADDR; // 0x1100
REG DL_MDIO_WR_DATA;
REG DL_MDIO_RD_DATA;
UINT RES10[464];
REG PL_PHY_CTL_15; // 0x184C
UINT RES11[2542];
REG MISC_CTRL; // 0x4008
MEM_WIN_REGS CPU2_MEM_WIN[4];
REG RC_BAR1_CONFIG_LO; // 0x402C
REG RC_BAR1_CONFIG_HI;
REG RC_BAR2_CONFIG_LO;
REG RC_BAR2_CONFIG_HI;
REG RC_BAR3_CONFIG_LO;
REG RC_BAR3_CONFIG_HI;
REG MSI_BAR_CONFIG_LO;
REG MSI_BAR_CONFIG_HI;
REG MSI_DATA_CONFIG;
UINT RES12[3];
REG RC_CONFIG_RETRY_TIMEOUT; // 0x405C
REG EOI_CTRL;
REG PCIE_CTRL;
REG PCIE_STATUS;
REG REVISION;
REG CPU2_MEM_WIN_BASE_LIMIT[4];
MEM_WIN_BASE_LIMIT_REGS CPU2_MEM_WIN_BASE_LIMIT_HI[4]; // 0x4080
REG MISC_CTRL1; // 0x40A0
REG UBUS_CTRL;
REG UBUS_TIMEOUT;
REG UBUS_BAR1_CONFIG_REMAP;
REG UBUS_BAR1_CONFIG_REMAP_HI;
REG UBUS_BAR2_CONFIG_REMAP;
UINT RES13[43];
REG VDM_PRIORITY_TO_QOS_MAP_HI; // 0x4164
REG VDM_PRIORITY_TO_QOS_MAP_LO;
REG AXI_INTF_CTRL;
REG AXI_READ_ERROR_DATA;
UINT RES14[100];
REG HARD_DEBUG; // 0x4304
UINT RES15[62];
REG INTR2_CPU_BASE[64]; // 0x4400
REG INTR2_MSI_BASE[64]; // 0x4500
UINT RES16[3712]; // 0x4600
UINT CFG_DATA[1024]; // 0x8000
REG CFG_INDEX; // 0x9000
}PCIE_HOST_REGS;

constexpr UINT AXI_INTF_CTRL_REQFIFO_EN_QOS_PROPAGATION=(1<<7);
constexpr UINT AXI_INTF_CTRL_BRIDGE_LOW_LATENCY_MODE=(1<<6);
constexpr UINT AXI_INTF_CTRL_MASTER_MAX_OUTSTANDING_REQUESTS_MASK=0x3F;

constexpr BIT_FIELD CFG_INDEX_BUS={ 0xFFF, 20 };
constexpr BIT_FIELD CFG_INDEX_FUNC={ 0x7, 12 };
constexpr BIT_FIELD CFG_INDEX_SLOT={ 0x1F, 15 };

constexpr BIT_FIELD CPU2_MEM_WIN_BASE_LIMIT_LIMIT={ 0xFFF, 20 };
constexpr BIT_FIELD CPU2_MEM_WIN_BASE_LIMIT_BASE={ 0xFFF, 4 };
constexpr UINT CPU2_MEM_WIN_BASE_LIMIT_NUM_BITS=12;
constexpr UINT CPU2_MEM_WIN_BASE_LIMIT_HI_MASK=0xFF;

constexpr UINT HARD_DEBUG_CLKREQ_DEBUG_EN=(1<<1);
constexpr UINT HARD_DEBUG_SERDES_IDDQ=(1<<27);
constexpr UINT HARD_DEBUG_CLKREQ_L1SS_EN=(1<<21);

constexpr UINT MISC_CTRL_RCB_MPS_MODE=(1<<10);
constexpr UINT MISC_CTRL_SCB_ACCESS_EN=(1<<12);
constexpr UINT MISC_CTRL_CFG_READ_UR_MODE=(1<<13);
constexpr BIT_FIELD MISC_CTRL_MAX_BURST_SIZE={ 0x3, 20 };
constexpr UINT MISC_CTRL_MAX_BURST_SIZE_256=1;
constexpr BIT_FIELD MISC_CTRL_SCB0_SIZE={ 0x1F, 27 };
constexpr BIT_FIELD MISC_CTRL_SCB1_SIZE={ 0x1F, 22 };
constexpr BIT_FIELD MISC_CTRL_SCB2_SIZE={ 0x1F, 0 };

constexpr UINT MISC_CTRL1_EN_VDM_QOS_CONTROL=(1<<5);
constexpr UINT MISC_CTRL1_OUTBOUND_RO=(1<<4);
constexpr UINT MISC_CTRL1_OUTBOUND_NO_SNOOP=(1<<3);
constexpr UINT MISC_CTRL1_OUTBOUND_TC_MASK=0xF;

constexpr UINT PCIE_CTRL_PERST=(1<<2);

constexpr UINT PCIE_STATUS_DL_ACTIVE=(1<<5);
constexpr UINT PCIE_STATUS_PHYLINKUP=(1<<4);

constexpr UINT PL_PHY_CTL_15_CLOCK_PERIOD_MASK=0xFF;
constexpr UINT PL_PHY_CTL_15_CLOCK_PERIOD_DEFAULT=0x12;

constexpr UINT RC_BAR_CONFIG_LO_SIZE=0x1F;

constexpr UINT ROOT_CTRL_CRSSVE=(1<<4);

constexpr UINT UBUS_BAR_CONFIG_REMAP_ACCESS_EN=(1<<0);
constexpr UINT UBUS_CTRL_REPLY_ERR_DIS=(1<<13);
constexpr UINT UBUS_CTRL_REPLY_DECERR_DIS=(1<<19);


//========
// Rescal
//========

typedef struct
{
REG START;
REG CTRL;
REG STATUS;
}RESCAL_REGS;

constexpr UINT RESCAL_START=1;
constexpr UINT RESCAL_STATUS=1;


//======
// Mdio
//======

constexpr BYTE MDIO_REG_SET_ADDR_OFFSET=0x1F;

constexpr UINT MDIO_PORT_SHIFT=22;
constexpr UINT MDIO_CMD_READ=1;
constexpr UINT MDIO_CMD_SHIFT=20;
constexpr UINT MDIO_CMD_WRITE=0;

constexpr UINT MDIO_DATA_DONE=(1<<31);
constexpr UINT MDIO_DATA_MASK=0x7FFFFFFF;

}}
